/*
 * Copyright (c) 2018 Voonder
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import com.orange.gradle.Android
import com.orange.gradle.AppVersion
import com.orange.gradle.Libraries

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
}

android {
    compileSdkVersion Android.compileSdk
    buildToolsVersion Android.buildTools

    defaultConfig {
        applicationId Android.Package.base
        minSdkVersion Android.minSdk
        targetSdkVersion Android.targetSdk
        versionCode AppVersion.code
        versionName AppVersion.name

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        resConfigs "en", "fr"

        applicationVariants.all {
            outputs.all {
                outputFileName = "${rootProject.name}_v${versionName}_c${versionCode}.apk"
            }
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"

            splits {
                abi.enable = false
                density.enable = false
            }
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"),
                    rootProject.file('buildSrc/proguard-rules.pro')
        }

        all {
            crunchPngs true
            buildConfigField("int", "VERSION_DATABASE", "${AppVersion.database}")
        }
    }

    flavorDimensions "server"

    productFlavors {
        dev {
            dimension "server"
            versionNameSuffix '-DEV'
        }

        prod {
            dimension "server"
        }
    }

    aaptOptions {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
        dexInProcess = false
        javaMaxHeapSize = "4g"
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage' // Some libraries have issues with this.
        disable 'OldTargetApi' // Lint gives this warning but Sdk 20 would be Android L Beta.
        disable 'IconDensities' // For testing purpose.
        disable 'IconMissingDensityFolder' // For testing purpose.
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    testOptions.unitTests.all {
        maxParallelForks = 8

        reports {
            html.enabled = false
            junitXml.enabled = false
        }
    }
}

apply from: rootProject.file("buildSrc/checkstyle.gradle")
apply from: rootProject.file("buildSrc/dokka.gradle")

dependencies {
    implementation Libraries.kotlin

    implementation Libraries.appCompatV7
    implementation Libraries.archExtensions
    implementation Libraries.constraintLayout
    implementation Libraries.dagger
    implementation Libraries.daggerAndroid
    implementation Libraries.daggerSupport
    implementation Libraries.design
    implementation Libraries.glide
    implementation Libraries.javaxInject
    implementation Libraries.moshi
    implementation Libraries.moshiAdapter
    implementation Libraries.retrofit
    implementation Libraries.retrofitConverter
    implementation Libraries.okhttp
    implementation Libraries.okhttpInterceptor
    implementation Libraries.paging
    implementation Libraries.preferenceV7
    implementation Libraries.room
    implementation Libraries.timber

    kapt Libraries.archRuntime
    kapt Libraries.daggerCompiler
    kapt Libraries.daggerProcessor
    kapt Libraries.glideCompiler
    kapt Libraries.roomCompiler
}

//apply plugin: 'com.google.gms.google-services'
